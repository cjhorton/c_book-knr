#include <stdio.h>
#define MAXLINE 1000 /* Max number of c haracters in a line */
#define TABSPACES 4 /* replace each tab with this many of NC character */
#define RC ' ' /* character to replace tabs with*/

char rawLine[MAXLINE];
char modLine[MAXLINE];

int main()
{

	int length = 0;
	extern char rawLine[];
	extern char modLine[];
	int GetLine();
	void ReplaceTabs();

	
	while ((length = GetLine()) > 0)
		if (length > 0) {
			ReplaceTabs();
			printf("O: %s", rawLine);
			printf("M: %s", modLine);
		}
	return 0;
}

int GetLine()
{
	int c, i;
	extern char rawLine[];
	extern char modLine[];

	/* flush out lines*/
	for (i = 0; i < MAXLINE; ++i) {
		rawLine[i] = ' ';
		modLine[i] = ' ';
	}

	/* MAXLINE - 1 since adding string terminator on the end */
	for (i = 0; i < MAXLINE - 1 && (c = getchar()) != EOF && c != '\n'; ++i)
		rawLine[i] = c;
	if (c == '\n') {
		rawLine[i] = c;
		++i;
	}
	rawLine[i] = '\0';
	return i;

}

/* copies characters from r1 into m1,
	but replaces tabs with TABSPACES number of NC characters*/
void ReplaceTabs()
{
	int i, j, s; 
	extern char rawLine[];
	extern char modLine[];
	
	j = 0;
	for (i = 0; i < MAXLINE - 1 && rawLine[i] != '\n'; ++i) {
		if (rawLine[i] != '\t') {
			modLine[j] = rawLine[i];
			++j;
		}
		else {
			for (s = 0; s < TABSPACES; ++s) {
				modLine[j] = RC;
				++j;
			}
		}
	}
	if (rawLine[i] == '\n')
		modLine[j] = '\n';
		modLine[j + 1] = '\0';
}
